# docker-compose.yml
services:
  postgres:
    image: postgres:14
    container_name: postgres-app
    restart: unless-stopped
    environment:
      POSTGRES_USER: app_postgres_user
      POSTGRES_PASSWORD: app_postgres_password
      POSTGRES_DB: app_postgres_db
    ports:
      - "5432:5432"
    volumes:
      - /Volumes/Data/docker/postgres:/var/lib/postgresql/data
      # - /var/vps-data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.2-alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - /Volumes/Data/docker/redis:/data
      # - /var/vps-data/redis:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - /Volumes/Data/docker/elasticsearch:/usr/share/elasticsearch/data
      # - /var/vps-data/elasticsearch:/usr/share/elasticsearch/data
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbituser
      RABBITMQ_DEFAULT_PASS: rabbitpassword
    volumes:
      - /Volumes/Data/docker/rabbitmq:/var/lib/rabbitmq
      # - /var/vps-data/rabbitmq:/var/lib/rabbitmq

  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: nestjs-dev
    ports:
      - "3002:3002"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - rabbitmq
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - .env.development